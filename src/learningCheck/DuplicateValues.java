package learningCheck;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

public class DuplicateValues {

	public static ArrayList<Integer> duplicates(int arr[], int n) {
		Arrays.sort(arr);
		Set<Integer> distinct = new HashSet<>();
		Set<Integer> duplicates = new HashSet<>();
		ArrayList<Integer> duplicate = new ArrayList<>();

		for (int i = 0; i < n; i++) {
			if (distinct.contains(arr[i])) {
				duplicates.add(arr[i]);
			}
			distinct.add(arr[i]);
		}

		duplicate.addAll(duplicates);
		if (duplicate.isEmpty())
			duplicate.add(-1);
		Collections.sort(duplicate);

		return duplicate;
	}
	
	
	 public static ArrayList<Integer> duplicatesSecondMethod (int arr[], int n) {
	        // code here
	        ArrayList<Integer> res = new ArrayList<>();
	        for(int i=0;i<n;i++){
	        	
	            int index = arr[i]%n;
	            
	            arr[index]=arr[index]+n;
	        }
	        for(int i=0;i<n;i++){
	            if((arr[i]/n)>=2){
	                res.add(i);
	            }
	        }
	        if(res.size()==0){
	            res.add(-1);
	        }
	        return res;
	    }
	public static void main(String[] args) {
		int arr[] = { 542, 244, 463, 103, 2, 358, 169, 36, 360, 192, 510, 185, 147, 72, 362, 383, 138, 311, 484, 678,
				522, 31, 406, 532, 3, 76, 72, 219, 400, 684, 118, 425, 236, 127, 449, 154, 342, 560, 623, 164, 364, 596,
				639, 31, 246, 607, 158, 603, 209, 636, 645, 146, 341, 627, 457, 588, 626, 137, 496, 356, 190, 376, 105,
				518, 661, 166, 216, 477, 325, 430, 510, 536, 243, 136, 138, 410, 67, 438, 480, 582, 85, 240, 94, 107,
				170, 250, 442, 204, 75, 216, 7, 285, 540, 123, 369, 246, 514, 364, 8, 578, 676, 414, 113, 535, 95, 204,
				613, 198, 133, 315, 9, 400, 91, 69, 685, 101, 569, 216, 85, 91, 577, 81, 255, 476, 225, 4, 562, 531,
				397, 234, 167, 411, 72, 643, 328, 161, 499, 311, 308, 455, 276, 687, 435, 99, 50, 275, 530, 500, 23,
				164, 398, 577, 51, 393, 200, 509, 102, 135, 255, 525, 15, 534, 401, 47, 258, 248, 565, 390, 475, 548,
				293, 299, 643, 299, 579, 0, 279, 154, 257, 57, 451, 109, 231, 558, 364, 295, 266, 81, 670, 325, 294,
				335, 300, 154, 164, 36, 228, 130, 480, 97, 610, 491, 670, 341, 354, 356, 551, 23, 213, 258, 216, 402,
				668, 94, 60, 237, 89, 514, 258, 30, 4, 403, 405, 398, 595, 257, 346, 338, 323, 513, 680, 502, 240, 285,
				608, 280, 227, 358, 31, 54, 162, 641, 120, 529, 501, 185, 607, 472, 381, 596, 400, 279, 300, 243, 194,
				374, 417, 150, 556, 13, 558, 281, 283, 17, 252, 275, 361, 618, 48, 197, 297, 254, 227, 542, 485, 591,
				110, 154, 81, 679, 496, 645, 651, 192, 299, 432, 231, 575, 129, 19, 118, 290, 210, 77, 388, 90, 679,
				657, 619, 605, 273, 482, 155, 34, 344, 80, 151, 502, 2, 135, 46, 563, 523, 627, 688, 623, 106, 557, 628,
				226, 606, 619, 161, 120, 314, 568, 256, 64, 316, 126, 57, 281, 655, 114, 685, 488, 609, 278, 464, 303,
				667, 653, 583, 473, 386, 356, 621, 473, 172, 580, 25, 221, 472, 483, 504, 638, 125, 54, 109, 602, 540,
				660, 211, 165, 614, 120, 495, 592, 567, 630, 66, 490, 157, 528, 315, 5, 168, 542, 296, 488, 228, 156,
				68, 350, 226, 417, 19, 329, 642, 312, 52, 248, 124, 669, 263, 555, 554, 509, 143, 626, 307, 157, 105,
				303, 331, 338, 502, 87, 95, 53, 653, 162, 13, 354, 579, 369, 203, 50, 398, 220, 437, 31, 112, 582, 85,
				495, 167, 465, 567, 289, 96, 146, 395, 149, 81, 493, 262, 12, 260, 557, 226, 689, 298, 468, 278, 542,
				599, 323, 528, 619, 316, 419, 119, 363, 546, 38, 555, 315, 288, 82, 4, 578, 36, 25, 191, 370, 592, 530,
				393, 544, 652, 515, 442, 682, 678, 102, 51, 463, 454, 536, 471, 424, 236, 124, 308, 417, 139, 99, 457,
				537, 384, 57, 654, 451, 570, 400, 594, 108, 602, 350, 127, 537, 607, 364, 77, 181, 212, 278, 59, 253,
				16, 590, 152, 418, 370, 361, 228, 30, 347, 118, 592, 377, 283, 454, 480, 49, 509, 303, 252, 232, 174,
				368, 576, 360, 655, 489, 30, 243, 138, 623, 336, 75, 103, 374, 549, 360, 645, 569, 122, 446, 447, 441,
				551, 648, 250, 95, 545, 582, 260, 112, 392, 96, 142, 412, 428, 75, 203, 156, 303, 393, 71, 173, 561,
				102, 65, 51, 364, 226, 31, 286, 573, 189, 667, 310, 85, 293, 251, 314, 523, 189, 166, 480, 668, 622,
				371, 434, 86, 443, 285, 315, 43, 21, 359, 161, 56, 576, 509, 77, 556, 518, 342, 571, 423, 556, 439, 313,
				481, 514, 16, 513, 424, 145, 439, 297, 556, 541, 472, 165, 286, 563, 463, 136, 610, 452, 420, 557, 546,
				20, 584, 180, 509, 251, 688, 501, 230, 474, 483, 272, 426, 336, 355, 548, 227, 34, 196, 105, 390, 164,
				462, 476, 379, 572, 193, 106, 451, 436, 80, 413, 642, 444, 40, 353, 454, 344, 629, 689, 549, 644, 33,
				650, 510, 688, 448, 391, 286, 494, 138, 401, 312, 343 };
		int n = 690;
		System.out.println(duplicates(arr, n));
		System.out.println(duplicatesSecondMethod(arr,n));
		

	}
}
